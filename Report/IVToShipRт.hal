external procedure ExtractObj(string,var Integer,var string);
external procedure addParamToJSONArea(string, string, var area);
external procedure delLastComaInArea(var area);
external function string 255 NormalizeStrToJson(string);

SetLangMode(LangRussian,"RUS",2); 

global procedure IVToShipRn()
begin
  record IVVc IVr;
  boolean TrHs,testf;
  record CUVc CUr;
  
  startreportnoheaderjob("–û—Ç–≥—Ä—É–∑–∏—Ç—å");
  
    startformat(15);
      outstring(0,0,"–°—á/—Ñ",false);
      outstring(60,0,"–î–∞—Ç–∞",false);
      outstring(150,0,"–ö–ª–∏–µ–Ω—Ç",false);
      outstring(300,0,"–°—É–º–º–∞",false);
      outstring(400,0,"–û—Ç–≥—Ä—É–∂–µ–Ω",false);
    endformat;
  
    IVr.InvDate = currentdate;
    TrHs = true;
    while(loopbackkey("InvDate",IVr,1,TrHs))begin
      testf = true;
      if(IVr.InvDate<addday(currentdate,-5))then begin TrHs = false; testf = false; end;
      if(IVr.OKFlag==0)then begin testf = false; end;
      CUr.Code = IVr.CustCode;
      readfirstmain(CUr,1,true);
      if(CUr.CustCat!="TELEG")then begin testf = false; end;
      
      if(testf)then begin
        startformat(15);
          outstring(0,"DblIVVc",IVr.SerNr,false);
          outstring(60,0,IVr.InvDate,false);
          outstring(150,0,IVr.Addr0,false);
          outstring(300,0,IVr.Sum4,false);
          if(IVr.ShipedFlag==1)then begin
            outstring(400,0,"X",false);
          end;
          gray_divider(0,1);
          
        endformat;
      end;
    end;
  
  endjob;

return;
end;


function string 60 GetDispGroupType(string DispGroup)
begin
  string 60 res;
  record DIVc DIr;
  DIr.Code = DispGroup;
  if (ReadFirstMain(DIr,1,true)) then begin
    res = DIr.CType;  
  end
  else begin
    res = "";
  end;

  GetDispGroupType = res;
  return 
end;

function string 60 GetDispGroup(string DispGroups, string DispGroupType) 
begin
  string 255 s;
  string 60 grp;
  Integer pos;
  
  s= DispGroups;
  pos = 0;
  ExtractObj(s,pos,grp);
  while (nonblank(grp)) begin
    if (GetDispGroupType(grp)) == DispGroupType then begin // SBU
      GetDispGroup = grp;
      return;
    end;
    ExtractObj(s,pos,grp);
  end; 
  GetDispGroup = "";
  return;
end;



global webpublic procedure WebTelegPrice()
begin
  record INVc INr;
  record ItemStatusVc ISr;
  record PLVc PLr;
  boolean TrHs,testf;
  string 255 spec,class,classname, group;
  integer price,i,rwcnt,j;
  record CTypeVc CTyper;
  record ORVc ORr;
  row ORVc ORrw;
  record DIVc DIr;
  vector string 200 vdinames;
  vector boolean vdicodes;
  array string 20 adicodes;
  area resp;

  while(loopmain(DIr,1,true))begin
    vdinames[DIr.Code] = DIr.Name;
  end;
  vdinames["0000"] = "–ë–µ–∑ –≥—Ä—É–ø–∏";
    
    PLr.PLCode = "RRP3";
    TrHs = true;
    while(loopkey("PLCode",PLr,1,TrHs))begin
      testf = true;
      if(PLr.PLCode!="RRP3")then begin TrHs = false; testf = false; end;
      ISr.Code = PLr.ArtCode;
      ISr.Location = "SORTIROVOC";
      readfirstmain(ISr,2,true);

      if(ISr.Instock<=0)then begin testf = false; end;

      if(testf)then begin
        INr.Code = PLr.ArtCode;
        readfirstmain(INr,1,true);
        spec = linetextget(INr,0);
        if(blank(spec))then begin
          spec = INr.Name;
        end;
        class = GetDispGroup(INr.DispGroups,"SIZE");
        if(blank(class))then begin
          class = "0000";
        end;
        vdicodes[class] = true;
        //startformat(15);
          price = PLr.ExVatPrice;
        //  outstring(0,0,"‚òÅ" & spec & " - " & price & " –≥—Ä–Ω",false);
        //endformat;
        clearrow(ORr,ORrw,1);
        ORrw.ArtCode = PLr.ArtCode;
        ORrw.Price = PLr.ExVatPrice;
        ORrw.Spec = spec;
        ORrw.Objects = class;
        matrowput(ORr,matrowcnt(ORr),ORrw);

      end;
    
    end;
    SortRows(ORr,"Spec",true);
    
    
    addtexttoarea("{",resp);
    
    getvectortags(vdicodes,adicodes);
    rwcnt = matrowcnt(ORr);
    for(i=0;i<adicodes.length;i=i+1)begin
      AddTextToArea("\"" & vdinames[adicodes[i]] & "\":{",resp);
      
      for(j=0;j<rwcnt;j=j+1)begin
        matrowget(ORr,j,ORrw);
        if(ORrw.Objects==adicodes[i])then begin
          addParamToJSONArea(ORrw.Spec,NormalizeStrToJson(ORrw.Price & " –≥—Ä–Ω"),resp);
        end;
      end;
      delLastComaInArea(resp);
      AddTextToArea("},",resp);
    end;
    
    delLastComaInArea(resp);
    AddTextToArea("}",resp);
    
    matrowget(ORr,0,ORrw);
    group = ORrw.Objects;
    if(blank(group))then begin
      group = "–ù–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ";
    end;
    
    
    
    
    WebSetContentType("application/json");
    
    weboutarea2(resp);
  
return;
end;

global procedure TelegPriceRn(record RcVc RepSpec)
begin
  record INVc INr;
  record ItemStatusVc ISr;
  record PLVc PLr;
  boolean TrHs,testf;
  string 255 spec,class,classname, group;
  integer price,i,rwcnt;
  record CTypeVc CTyper;
  record ORVc ORr;
  row ORVc ORrw;
  record DIVc DIr;
  vector string 200 vdinames;

  while(loopmain(DIr,1,true))begin
    vdinames[DIr.Code] = DIr.Name;
  end;

  //CTyper.Code = "SIZE";
  //readfirstmain(CTyper,1,true);
  
  startreportnoheaderjob("–¢–µ–ª–µ–≥—Ä–∞–º –ø—Ä–∞–π—Å");
    
    PLr.PLCode = "RRP3";
    TrHs = true;
    while(loopkey("PLCode",PLr,1,TrHs))begin
      testf = true;
      if(PLr.PLCode!="RRP3")then begin TrHs = false; testf = false; end;
      ISr.Code = PLr.ArtCode;
      ISr.Location = "SORTIROVOC";
      readfirstmain(ISr,2,true);

      if(ISr.Instock<=0)then begin testf = false; end;

      if(testf)then begin
        INr.Code = PLr.ArtCode;
        readfirstmain(INr,1,true);
        spec = linetextget(INr,0);
        if(blank(spec))then begin
          spec = INr.Name;
        end;
        class = GetDispGroup(INr.DispGroups,"SIZE");
        //startformat(15);
          price = PLr.ExVatPrice;
        //  outstring(0,0,"‚òÅ" & spec & " - " & price & " –≥—Ä–Ω",false);
        //endformat;
        clearrow(ORr,ORrw,1);
        ORrw.ArtCode = PLr.ArtCode;
        ORrw.Price = PLr.ExVatPrice;
        ORrw.Spec = spec;
        ORrw.Objects = class;
        ORrw.SerialNr = class & left(spec,4);
        matrowput(ORr,matrowcnt(ORr),ORrw);

      end;
    
    end;
    SortRows(ORr,"SerialNr",true);

    if(matrowcnt(ORr))>0 then begin
      startformat(15);
        outstring(0,0,"üìÑ–ü—Ä–∞–π—Å –Ω–∞ " & DateToString(currentdate,"DD-MM-YYYY") & "üìÑ",false);
      EndFormat;
      startformat(15);
        outstring(0,0,"(—Ü—ñ–Ω–∞ –∑–∞ –±–ª–æ–∫)",false);
      EndFormat;
      startformat(15);
        outstring(0,0,"‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–ú–Ü–ù–Ü–ú–ê–õ–¨–ù–ï –ó–ê–ú–û–í–õ–ï–ù–ù–Ø   25 –ë–ª–æ–∫—ñ–≤‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è",false);
      EndFormat;
      startformat(15);
      endformat;

      matrowget(ORr,0,ORrw);
      group = ORrw.Objects;
      if(nonblank(group))then begin
        startformat(15);
        endformat;
        startformat(15);
          outstring(0,0,"‚≠ê" & vdinames[group] & "‚≠ê",false);
        endformat;
        startformat(15);
        endformat;
      end;
    end;
    
    rwcnt = matrowcnt(ORr);
    for (i=0;i<rwcnt;i=i+1) begin
      matrowget(ORr,i,ORrw);

      if(nonblank(ORrw.Objects) and group!=ORrw.Objects)then begin
        group = ORrw.Objects;
        startformat(15);
        endformat;
        startformat(15);
          outstring(0,0,"‚≠ê" & vdinames[group] & "‚≠ê",false);
        endformat;
        startformat(15);
        endformat;
      end;

      startformat(15);
        if(RepSpec.Media==mtScreen)then begin
            outstring(0,"DblINVc",ORrw.ArtCode,false);
        end;
        outstring(0,0,"‚òÅ" & ORrw.Spec & " - " & ORrw.Price & " –≥—Ä–Ω",false);
      endformat;



    end;

    startformat(15);
    endformat;

    startformat(15);
        outstring(0,0,"‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–ú–Ü–ù–Ü–ú–ê–õ–¨–ù–ï –ó–ê–ú–û–í–õ–ï–ù–ù–Ø   25 –ë–ª–æ–∫—ñ–≤‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è",false);
      EndFormat;
    startformat(15);
      outstring(0,0,"–î–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–≤—è–∂—ñ—Ç—å—Å—è –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º",false);
    endformat;
    startformat(15);
      outstring(0,0,"üì±(Vodafone) tel:+38(066)895-32-20",false);
    endformat;


    startformat(15);
    endformat;

    startformat(15);
      outstring(0,0,"üòâ–ú–∏ –∑ –∑–∞–¥–æ–≤–æ–ª–µ–Ω–Ω—è–º –≤—ñ–¥–ø–æ–≤—ñ–º–æ –í–∞–º –Ω–∞ –±—É–¥—å-—è–∫—ñ –ø–∏—Ç–∞–Ω–Ω—è —Å—Ç–æ—Å–æ–≤–Ω–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",false);
    endformat;
    startformat(15);
      outstring(0,0,"–î–∑–≤–æ–Ω—ñ—Ç—å üìû, –∞–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É‚¨áÔ∏è",false);
    endformat;


  endjob;
  
return;
end;


global webpublic procedure WebTelegPriceOPT()
begin
  record INVc INr;
  record ItemStatusVc ISr;
  record PLVc PLr;
  boolean TrHs,testf;
  string 255 spec,class,classname, group;
  integer price,i,rwcnt,j;
  record CTypeVc CTyper;
  record ORVc ORr;
  row ORVc ORrw;
  record DIVc DIr;
  vector string 200 vdinames;
  vector boolean vdicodes;
  array string 20 adicodes;
  area resp;
  integer defqty;

  while(loopmain(DIr,1,true))begin
    vdinames[DIr.Code] = DIr.Name;
  end;
  vdinames["0000"] = "–ë–µ–∑ –≥—Ä—É–ø–∏";
    
    PLr.PLCode = "RRP4";
    TrHs = true;
    while(loopkey("PLCode",PLr,1,TrHs))begin
      testf = true;
      if(PLr.PLCode!="RRP4")then begin TrHs = false; testf = false; end;
      ISr.Code = PLr.ArtCode;
      ISr.Location = "OSN";
      readfirstmain(ISr,2,true);

      if(ISr.Instock<=0)then begin testf = false; end;

      if(testf)then begin
        INr.Code = PLr.ArtCode;
        readfirstmain(INr,1,true);
        spec = linetextget(INr,0);
        if(blank(spec))then begin
          spec = INr.Name;
        end;
        class = GetDispGroup(INr.DispGroups,"SIZE");
        if(blank(class))then begin
          class = "0000";
        end;
        vdicodes[class] = true;
        //startformat(15);
          price = PLr.ExVatPrice;
        //  outstring(0,0,"‚òÅ" & spec & " - " & price & " –≥—Ä–Ω",false);
        //endformat;
        clearrow(ORr,ORrw,1);
        ORrw.ArtCode = PLr.ArtCode;
        defqty = 50;
        if(INr.UnitCoefficient>0)then begin
          defqty = INr.UnitCoefficient;
        end;
        ORrw.Price = PLr.ExVatPrice*defqty;
        ORrw.Spec = spec;
        ORrw.Objects = class;
        matrowput(ORr,matrowcnt(ORr),ORrw);

      end;
    
    end;
    SortRows(ORr,"Spec",true);
    
    
    addtexttoarea("{",resp);
    
    getvectortags(vdicodes,adicodes);
    rwcnt = matrowcnt(ORr);
    for(i=0;i<adicodes.length;i=i+1)begin
      AddTextToArea("\"" & vdinames[adicodes[i]] & "\":{",resp);
      
      for(j=0;j<rwcnt;j=j+1)begin
        matrowget(ORr,j,ORrw);
        if(ORrw.Objects==adicodes[i])then begin
          addParamToJSONArea(ORrw.Spec,NormalizeStrToJson(ORrw.Price & "$"),resp);
        end;
      end;
      delLastComaInArea(resp);
      AddTextToArea("},",resp);
    end;
    
    delLastComaInArea(resp);
    AddTextToArea("}",resp);
    
    matrowget(ORr,0,ORrw);
    group = ORrw.Objects;
    if(blank(group))then begin
      group = "–ù–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ";
    end;
    
    
    
    
    WebSetContentType("application/json");
    
    weboutarea2(resp);
  
return;
end;

global procedure TelegOptPriceRn(record RcVc RepSpec)
begin
  record INVc INr,INrIMG;
  record ItemStatusVc ISr;
  record PLVc PLr;
  boolean TrHs,testf;
  string 255 spec,class,classname, group;
  integer price,i,rwcnt;
  record CTypeVc CTyper;
  record ORVc ORr;
  row ORVc ORrw;
  record DIVc DIr;
  vector string 200 vdinames;
  integer defqty;
  
  INrIMG.Code = "TOP_SIGAR";
  readfirstmain(INrIMG,1,true);

  while(loopmain(DIr,1,true))begin
    vdinames[DIr.Code] = DIr.Name;
  end;

  //CTyper.Code = "SIZE";
  //readfirstmain(CTyper,1,true);
  
  startreportnoheaderjob("–¢–µ–ª–µ–≥—Ä–∞–º –ø—Ä–∞–π—Å");
    
    //startformat(15);
      //OutImage(295,100,30,INrIMG);
    //endformat;
    
    PLr.PLCode = "RRP4";
    TrHs = true;
    while(loopkey("PLCode",PLr,1,TrHs))begin
      testf = true;
      if(PLr.PLCode!="RRP4")then begin TrHs = false; testf = false; end;
      ISr.Code = PLr.ArtCode;
      ISr.Location = "OSN";
      readfirstmain(ISr,2,true);

      if(ISr.Instock<=0)then begin testf = false; end;

      if(testf)then begin
        INr.Code = PLr.ArtCode;
        readfirstmain(INr,1,true);
        
        defqty = 50;
        if(INr.UnitCoefficient>0)then begin
          defqty = INr.UnitCoefficient;
        end;
        
        spec = linetextget(INr,0);
        if(blank(spec))then begin
          spec = INr.Name;
        end;
        class = GetDispGroup(INr.DispGroups,"SIZE");
        //startformat(15);
          price = PLr.ExVatPrice;
        //  outstring(0,0,"‚òÅ" & spec & " - " & price & " –≥—Ä–Ω",false);
        //endformat;
        clearrow(ORr,ORrw,1);
        ORrw.ArtCode = PLr.ArtCode;
        ORrw.Price = PLr.ExVatPrice*defqty;
        ORrw.Spec = spec;
        ORrw.Objects = class;
        ORrw.SerialNr = class & left(spec,4);
        matrowput(ORr,matrowcnt(ORr),ORrw);

      end;
    
    end;
    SortRows(ORr,"SerialNr",true);

    if(matrowcnt(ORr))>0 then begin
      startformat(15);
        outstring(0,0,"üìÑ–ü—Ä–∞–π—Å –Ω–∞ " & DateToString(currentdate,"DD-MM-YYYY") & "üìÑ",false);
      EndFormat;
      startformat(15);
        outstring(0,0,"(–¶—ñ–Ω–∞ –∑–∞ —è—â–∏–∫)",false);
      EndFormat;
      startformat(15);
      endformat;

      matrowget(ORr,0,ORrw);
      group = ORrw.Objects;
      if(nonblank(group))then begin
        startformat(15);
        endformat;
        startformat(15);
          outstring(0,0,"‚≠ê" & vdinames[group] & "‚≠ê",false);
        endformat;
        startformat(15);
        endformat;
      end;
    end;
    
    rwcnt = matrowcnt(ORr);
    for (i=0;i<rwcnt;i=i+1) begin
      matrowget(ORr,i,ORrw);

      if(nonblank(ORrw.Objects) and group!=ORrw.Objects)then begin
        group = ORrw.Objects;
        startformat(15);
        endformat;
        startformat(15);
          outstring(0,0,"‚≠ê" & vdinames[group] & "‚≠ê",false);
        endformat;
        startformat(15);
        endformat;
      end;

      startformat(15);
        if(RepSpec.Media==mtScreen)then begin
            outstring(0,"DblINVc",ORrw.ArtCode,false);
        end;
        outstring(0,0,"‚òÅ" & ORrw.Spec & " - " & ORrw.Price & " $",false);
      endformat;
    end;

    startformat(15);
    endformat;

    startformat(15);
      outstring(0,0,"–î–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–≤—è–∂—ñ—Ç—å—Å—è –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º",false);
    endformat;
    startformat(15);//0950947946
      outstring(0,0,"üì±(Vodafone) tel:+38(095)094-79-46",false);
    endformat;


    startformat(15);
    endformat;

    startformat(15);
      outstring(0,0,"üòâ–ú–∏ –∑ –∑–∞–¥–æ–≤–æ–ª–µ–Ω–Ω—è–º –≤—ñ–¥–ø–æ–≤—ñ–º–æ –í–∞–º –Ω–∞ –±—É–¥—å-—è–∫—ñ –ø–∏—Ç–∞–Ω–Ω—è —Å—Ç–æ—Å–æ–≤–Ω–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",false);
    endformat;
    startformat(15);
      outstring(0,0,"–î–∑–≤–æ–Ω—ñ—Ç—å üìû, –∞–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É‚¨áÔ∏è",false);
    endformat;


  endjob;
  
return;
end;